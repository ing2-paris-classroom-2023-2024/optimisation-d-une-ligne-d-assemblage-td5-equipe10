#include <stdio.h>
#include <stdbool.h>

typedef struct {
    int id;
} Ope;

void repartitionExclu(Ope operations[], int nbOperations, int m) {
    int excluPairs[][2] = {{1, 2}, {3, 4}, {5, 6}};
    int nbStations = 0;
    for (int i = 0; i < nbOperations; ++i) {
        bool compatible = true;

        for (int j = 0; j < i; ++j) {
            for (int k = 0; k < sizeof(excluPairs) / sizeof(excluPairs[0]); ++k) {
                if ((operations[i].id == excluPairs[k][0] && operations[j].id == excluPairs[k][1]) ||
                    (operations[i].id == excluPairs[k][1] && operations[j].id == excluPairs[k][0])) {
                    compatible = false;
                    break;
                }
            }
            if (!compatible) {
                break;
            }
        }
        if (compatible) {
            printf("Operation %d placee dans la station %d\n", operations[i].id, nbStations + 1);
        } else {
            nbStations++;
            printf("Operation %d placee dans une nouvelle station %d\n", operations[i].id, nbStations);
        }
    }
    printf("Nombre total de stations : %d\n", nbStations);
}

int main() {
    Ope operations[] = {{1}, {2}, {3}, {4}, {5}, {6}};
    int nbOperations = sizeof(operations) / sizeof(operations[0]);
    int m = 3;
    repartitionExclu(operations, nbOperations, m);
    return 0;
}
